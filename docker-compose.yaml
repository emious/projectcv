#services:
#  bookstore:
#    image: projectcv:1.0.0
#    restart: unless-stopped
#    build: .
#    command: >
#      sh -c "python manage.py makemigrations &&
#             python manage.py migrate &&
#             python manage.py shell < createsuperuser.py &&
#             python manage.py runserver 0.0.0.0:6030"
#    container_name: projectcv
#    ports:
#      - 0.0.0.0:6030:6030
#    depends_on:
#      - db
#
#
#  db:
#    image: postgres:15
#    volumes:
#      - postgres_data:/var/lib/postgresql/data/
#    environment:
#      - POSTGRES_USER=hello_django
#      - POSTGRES_PASSWORD=hello_django
#      - POSTGRES_DB=hello_django_dev
#
#volumes:
#  postgres_data:

# docker-compose.yml
services:
  db:
    image: postgres:latest
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:management
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5

  web:
    image: task:1.0.0
    command: sh -c "python manage.py makemigrations &&
      python manage.py migrate &&
      python manage.py collectstatic --noinput &&
      uvicorn projectcv.asgi:application --host 0.0.0.0 --port 8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"
    depends_on:
      - db
      - redis
      - rabbitmq

  celery:
    image: task:1.0.0
    command: sh -c "celery -A projectcv worker --loglevel=info"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - .:/app
    depends_on:
      rabbitmq:
        condition: service_healthy

  celery-beat:
    image: task:1.0.0
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    command: sh -c "celery -A  projectcv beat -l INFO --scheduler django_celery_beat.schedulers:DatabaseScheduler"
#    command: tail -f /dev/null
    volumes:
      - .:/app
    depends_on:
      rabbitmq:
        condition: service_healthy

volumes:
  postgres_data: